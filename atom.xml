<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ReModer&#39;s Blog</title>
  
  <subtitle>都是风景，幸会</subtitle>
  <link href="http://remoder.github.io/atom.xml" rel="self"/>
  
  <link href="http://remoder.github.io/"/>
  <updated>2021-12-25T16:00:17.223Z</updated>
  <id>http://remoder.github.io/</id>
  
  <author>
    <name>ReModer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>辩论进阶途径剖析</title>
    <link href="http://remoder.github.io/debate-skill-ways.html"/>
    <id>http://remoder.github.io/debate-skill-ways.html</id>
    <published>2021-12-21T15:30:09.000Z</published>
    <updated>2021-12-25T16:00:17.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><h2 id="最好方法"><a href="#最好方法" class="headerlink" title="最好方法"></a>最好方法</h2><p>找个靠谱的人带着！！！</p><h2 id="一些网课"><a href="#一些网课" class="headerlink" title="一些网课"></a>一些网课</h2><p><a href="https://link.zhihu.com/?target=http://open.163.com/movie/2015/8/Q/S/MAUUPD810_MAV6D2AQS.html">周帅《辩论-说服的艺术》</a></p><h2 id="一些文章"><a href="#一些文章" class="headerlink" title="一些文章"></a>一些文章</h2><p><a href="https://www.zhihu.com/question/35258771/answer/61934470">辩论赛的判准发展</a><br><a href="https://www.zhihu.com/question/31637556/answer/52770107">辩论技术流的发展</a><br><a href="https://zhuanlan.zhihu.com/p/45159176">请教学长姐的姿势</a></p><h2 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h2><p><a href="http://www.guoxuedashi.net/">国学大师-查询字词成语</a></p><h2 id="一些课本"><a href="#一些课本" class="headerlink" title="一些课本"></a>一些课本</h2><p><a href="/download/%E8%B6%85%E7%BA%A7%E8%BE%A9%E6%89%8B%C2%B7%E8%BE%A9%E8%AE%BA%E9%80%9A%E8%AF%86%E8%AF%BE%E6%9C%AC.pdf">超辩通识课本</a><br><a href="/download/%E9%BB%84%E6%89%A7%E4%B8%AD%E5%8D%9A%E5%AE%A2.pdf">黄执中博客pdf版</a><br><a href="/download/%E8%BE%A9%E8%AE%BA%E6%8F%90%E9%AB%98%E5%B0%8F%E5%86%8C%E5%AD%90-%E9%83%AD%E5%88%9D%E8%88%AA.pdf">郭初航辩论小册子</a></p><h1 id="提高"><a href="#提高" class="headerlink" title="提高"></a>提高</h1><h2 id="看比赛"><a href="#看比赛" class="headerlink" title="看比赛"></a>看比赛</h2><h3 id="看什么比赛"><a href="#看什么比赛" class="headerlink" title="看什么比赛"></a>看什么比赛</h3><h4 id="赛事"><a href="#赛事" class="headerlink" title="赛事"></a>赛事</h4><ul><li>国际华语辩论邀请赛</li><li>世界华语辩论锦标赛</li><li>华语辩论世界杯。</li></ul><h4 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h4><p><a href="https://www.zhihu.com/question/38107906">2015年度，最值得推荐的辩论赛视频有哪些？</a><br><a href="https://www.zhihu.com/question/23297032">有哪些经典的辩论赛视频可以推荐？</a></p><h3 id="怎么看比赛"><a href="#怎么看比赛" class="headerlink" title="怎么看比赛"></a>怎么看比赛</h3><ol><li>开始之前，写一些双方的基本思路。</li><li>多次听立论：<ol><li>分别记录双方的论点论据</li><li>其他辩位补充申论时完善</li></ol></li><li>记录交锋点：<ol><li>定义的交锋<ul><li>定义不同时双方说了什么</li><li>结辩时定义还不同的话如何处理</li></ul></li><li>判准的争夺<ul><li>如何去说服评委接受自己的判准</li></ul></li><li>论点的拆解 &amp; 论据的检证<ul><li>首质对对手的理论体系做了怎样的框定和拆解</li><li>论据提出后，双方做了什么相抗论据和补充解释</li><li>拆解论点和论证立场缺乏逻辑关系时说了什么</li></ul></li></ol></li><li>自由辩结束后，选择一个立场做结辩。<ol><li>重点在于总结战场，要梳理出对方漏洞和己方未结论点。</li><li>初始阶段时间可以稍微放宽，然后逐渐加到规定时间。 </li></ol></li><li>双方结辩后：<ol><li>回顾双方的理论体系</li><li>判断哪方论证残留度更高</li><li>观察视频中四辩的结辩框架</li><li>思考双方在理论时为何以这样的方式阐述论点</li></ol></li><li>评委点评时：<ol><li>对于双方论点的认知，与评委是否存在差异</li><li>对于双方交锋的胜负，与评委是否存在差异</li><li>注意评委的拆解与论证示范</li><li>于评委期待和视频中四辩比较自己的结辩</li></ol></li></ol><h2 id="打比赛"><a href="#打比赛" class="headerlink" title="打比赛"></a>打比赛</h2><h3 id="怎么备比赛"><a href="#怎么备比赛" class="headerlink" title="怎么备比赛"></a>怎么备比赛</h3><ul><li>想一想：<ul><li>我的立论到底是什么？</li><li>场上我传递给评委的立论是什么？</li><li>在我被对手干扰后，我传递到评委耳朵里的立论又还剩下了什么？</li></ul></li></ul><ol><li>查阅资料，收集双方的论点论据，做到在不看稿子的情况下能说清楚双方的主要观点。</li><li>猜出对方的立论</li></ol><h3 id="怎么打比赛"><a href="#怎么打比赛" class="headerlink" title="怎么打比赛"></a>怎么打比赛</h3><ol><li>场上的记录<ul><li>学会用符号和关键词</li><li>梳理相关论点的前后逻辑</li><li>关注对面的“怪话”</li></ul></li><li>自由辩环节<ul><li>控场打法技巧<ul><li>起：说清楚问题逻辑，提出问题</li><li>追：追两三个同样逻辑的问题</li><li>结：把问题结论结一下，明确己方的战场成果</li><li>转：转到下一个问题，另一片战场</li></ul></li><li>用自己最强的辩手，盯防对方的王牌辩手，紧跟发言，抑制输出</li><li>揪住对方难以解释的点多次打击、连续追问简短问题，打乱对方节奏</li></ul></li><li>交锋的处理<ul><li>勿多条逻辑逼近</li><li>明确攻点和守点<ul><li>攻点：逻辑短，易论证，要优先打</li><li>守点：逻辑长，难论证，不主动打</li></ul></li><li>分清战场的优劣<ul><li>优势战场要获胜，追问攻击加短打</li><li>烈士战场求持平，解释防守并反问</li></ul></li></ul></li><li>辩位的申论<ol><li>一辩重在明确定义、提出标准、展开论点</li><li>二辩重在反驳对手论点，进一步补充论据</li><li>三遍明确前期交锋，提出自由辩的主战场</li><li>四辩重在梳理比赛，明确不同战场的胜负</li></ol></li><li>结辩的框架<ol><li>破框架<ul><li>按定义，标准，论点，价值的排序，做一个全面反驳</li><li>“第一，对方辩友的定义有偏差…<br>第二，对方辩友的比较标准不合理…<br>第三，对方辩友的论点不成立…<br>第四，对方辩友的价值不值得提倡…”</li><li><a href="www.bilibili.com/video/BV1zb41127aR">金钱是不是万恶之源(反四胡渐彪)</a> </li></ul></li><li>破分歧<ul><li>找到双方正常比赛最为核心的两到三个分歧，进行拆解和阐述</li><li>“今天这场比赛，我们双方达成了这几点共识…我们剩下最核心的分歧无非是…”</li><li><a href="https://www.bilibili.com/video/BV17s411K74B">21世纪青年人做加法/做减法更幸福(正四詹青云)</a></li></ul></li><li>破价值<ul><li>把对方所有的论点概括成一种价值倡导，然后进行反驳</li><li>“对方辩友今天说了很多…可是说到底他们都是在说一件事…他们所提倡的价值无非是…可是大家有没有想过…”</li><li><a href="https://www.bilibili.com/video/BV1Mx411A7nv">顺境和逆境何者更有助于人的成长(反四黄执中)</a></li></ul></li></ol></li></ol><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><h2 id="构建辩论环境"><a href="#构建辩论环境" class="headerlink" title="构建辩论环境"></a>构建辩论环境</h2><ul><li><strong>微信公众号：</strong> online辩论</li></ul><h2 id="拓宽辩论思维"><a href="#拓宽辩论思维" class="headerlink" title="拓宽辩论思维"></a>拓宽辩论思维</h2><h3 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h3><ul><li><p>辩论相关</p><ul><li>《形式逻辑》金岳霖</li><li>《金字塔原理》芭芭拉·明托</li><li>《罗伯特议事规则》亨利·罗伯特</li><li>《认识辩论》游梓翔</li><li>《论辩史话》赵传栋</li><li>《简单逻辑学》丹尼斯·麦克伦尼 赵明燕译</li><li>《好好讲道理：反击谬误的逻辑学训练》爱德华·戴默 刀尔登译</li></ul></li><li><p>文史哲相关</p><ul><li>《西方哲学史》伯特兰·罗素</li><li>《中国哲学简史》冯友兰</li><li>《全球通史》</li><li>《二十四史》</li><li>《国史新论》</li><li>四大名著</li><li>金庸武侠</li></ul></li></ul>]]></content>
    
    
    <summary type="html">新生班选拔赛被暴打，决定进阶辩论能力，此文主要记录收集到的方法论。</summary>
    
    
    
    
    <category term="辩论" scheme="http://remoder.github.io/tags/%E8%BE%A9%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>辩论之反驳能力日常训练</title>
    <link href="http://remoder.github.io/debate-contradiction-practice.html"/>
    <id>http://remoder.github.io/debate-contradiction-practice.html</id>
    <published>2021-12-07T15:13:25.000Z</published>
    <updated>2021-12-25T16:04:12.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="07-12-2021"><a href="#07-12-2021" class="headerlink" title="07/12/2021"></a>07/12/2021</h2><blockquote><p>感谢苏东吴后勤部老师<br>运个小桌子帮我借来这么大货车<br>– Zzy</p></blockquote><ol><li><p><strong>观点</strong>  </p><p>苏老师借货车运桌子 -&gt; 苏老师是在帮助我 -&gt; 我要谢谢苏老师</p><p><strong>反驳</strong> </p><ol><li>按您方逻辑，只要对你有帮助就会感谢的话，校园霸凌帮助你认清了世界残酷的真相，你会感谢霸凌者吗？</li><li>苏老师借货车运桌子真的是为了帮助你吗，如果他另有所图，只是拿你当挡箭牌，你还会感谢他吗？</li><li>如果苏老师没有借货车运桌子，用其他方式帮助你，你还会感谢他的吧？</li></ol></li></ol><hr><h2 id="08-12-2021"><a href="#08-12-2021" class="headerlink" title="08/12/2021"></a>08/12/2021</h2><blockquote><p>b站帮我找校友了属于是<br>– Wqh</p></blockquote><ol><li><p><strong>观点</strong></p><p>b站的推荐视频有的与北化有关 -&gt; 通过视频我可以见到更多的校友 -&gt; b站帮我找校友</p><p><strong>反驳</strong></p><ol><li>b站的推荐中有关北化的视频究竟占多少？其中能够让你认识更多校友的又占多少？</li><li>从b站见到更多的校友，这样真的算是结识吗？</li><li>不看视频你就无法认识更多的校友了吗？这样效率较低的方式不是反而抑制你找校友了？</li></ol></li></ol><hr><h2 id="09-12-2021"><a href="#09-12-2021" class="headerlink" title="09/12/2021"></a>09/12/2021</h2><blockquote><p>一年一度，不容错过<br>– Jc</p></blockquote><ol><li><p><strong>观点</strong></p><p>这个活动一年才有一次 -&gt; 需要很长时间才能有下次，甚至可能没有下次了 -&gt; 这次应该抓住机会不能错过</p><p><strong>反驳</strong></p><ol><li>今天有个杀人的机会，下次可能就没有了，这就是你去杀人的理由吗？</li><li>这是不是意味着我始终会有永远无法抓住这种机会的时候？现在我只是把这个时候提前了而已。</li><li>这样的活动我不去又没什么损失，为什么非得抓住这机会？</li></ol></li></ol><hr><h2 id="10-12-2021"><a href="#10-12-2021" class="headerlink" title="10/12/2021"></a>10/12/2021</h2><blockquote><p>人不能总做正确的选择，偶尔也要做让自己快乐的选择<br>– Ygl</p></blockquote><ol><li><p><strong>观点</strong></p><p>正确的选择不一定是快乐的选择 -&gt; 人需要快乐 -&gt; 偶尔也要做让自己快乐的选择</p><p><strong>反驳</strong></p><ol><li>如果这个快乐的选择只一次就毁了你，还要去做吗？</li><li>比起错误，正确难道不是更让人快乐？</li><li>既然偶尔做，就意味着对自身是有危害的，而且带来的快乐要小于危害，那为什么还做？</li></ol></li></ol><hr><h2 id="11-12-2021"><a href="#11-12-2021" class="headerlink" title="11/12/2021"></a>11/12/2021</h2><blockquote><p>谁懂我下周一就要体育补考谁懂谁懂谁懂<br>– Zzh</p></blockquote><ol><li><p><strong>观点</strong></p><p>不亲身经历就不知道感觉 -&gt; 只有我要体育补考 -&gt; 没人懂体育补考的感觉</p><p><strong>反驳</strong></p><ol><li>不亲身经历依然可以通过想象得到感觉。</li><li>其他人或许之前也经历过体育补考，也知道体育补考的感觉。</li><li>亲身经历了也不一定就能懂得感觉啊。</li></ol></li></ol><hr><h2 id="13-12-2021"><a href="#13-12-2021" class="headerlink" title="13/12/2021"></a>13/12/2021</h2><blockquote><p>我现在对一个人最美好的祝愿就是祝她期末不挂科<br>– Llm</p></blockquote><ol><li><p><strong>观点</strong></p><p>对我来说期末很可能挂科 -&gt; 别人也很可能挂科 -&gt; 对他人的最好祝愿就是不挂科</p><p><strong>反驳</strong></p><ol><li>你真的很可能挂科吗？看过卷子是吗？</li><li>你可能挂科不代表别人有可能挂科啊。</li><li>为什么这会是对他人最好的祝愿呢，如果别人不在意挂科呢？</li></ol></li></ol><hr><h2 id="14-12-2021"><a href="#14-12-2021" class="headerlink" title="14/12/2021"></a>14/12/2021</h2><blockquote><p>我好爱班长和团支书，自费给我们买吃的<br>– Dyt</p></blockquote><ol><li><p><strong>观点</strong></p><p>班长和团支书自费给我们买吃的 -&gt; 班长和团支书对我们非常好 -&gt; 我非常爱我们的班长和团支书</p><p><strong>反驳</strong></p><ol><li>班长和团支书真的是自费买的吗？说不定是用班费？</li><li>如果是因为做了对不起你们的事才买吃的补偿，还是对你们非常好吗？</li><li>如果某天班长和团支书给别人买吃的不给你买，你还爱他们么？</li></ol></li></ol><hr><h2 id="15-12-2021"><a href="#15-12-2021" class="headerlink" title="15/12/2021"></a>15/12/2021</h2><blockquote><p>看看谁在摸鱼<br>– Jht</p></blockquote><ol><li><p><strong>观点</strong></p><p>给我点赞就是在玩手机 -&gt; 工作时间玩手机就是摸鱼 -&gt; 我来检查谁在摸鱼</p><p><strong>反驳</strong></p><ol><li>点赞的未必就是号主,号主未必在玩手机.</li><li>如果ta的工作就是需要检查朋友圈呢?</li><li>有些人摸鱼不点赞,也检查不出来.</li></ol></li></ol><hr><h2 id="25-12-2021"><a href="#25-12-2021" class="headerlink" title="25/12/2021"></a>25/12/2021</h2><blockquote><p>马原 我大抵是挂了吧<br>– Yhy</p></blockquote><ol><li><p><strong>观点</strong></p><p>我的马原学习不是很用功 -&gt; 考试后自我感觉不好 -&gt; 我的马原大概率要挂</p><p><strong>反驳</strong></p><ol><li>不是很用功，不代表用的功不足以应付考试。</li><li>自我感觉不好，不意味着最终得分太差。</li><li>即便如此，依然可能通过求情等方式使得马原及格。</li></ol></li></ol>]]></content>
    
    
    <summary type="html">挑选朋友圈的一条推送，试着为看到的每个观点，都找出至少三个有代表性的反例，并用定式进行反驳。</summary>
    
    
    
    
    <category term="辩论" scheme="http://remoder.github.io/tags/%E8%BE%A9%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>刷题记录</title>
    <link href="http://remoder.github.io/problems-of-ACM.html"/>
    <id>http://remoder.github.io/problems-of-ACM.html</id>
    <published>2021-12-06T03:00:21.000Z</published>
    <updated>2021-12-08T15:03:22.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="The-Ants"><a href="#The-Ants" class="headerlink" title="The Ants"></a><a href="http://poj.org/problem?id=1852">The Ants</a></h2><p>考虑蚂蚁相遇时，视为互相穿过，所以只需要计算每只蚂蚁的两向时间，进行比较得出答案即可。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> t, l, n, x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans1 = <span class="number">0</span>, ans2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;l, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">            ans1 = <span class="built_in">max</span>(ans1, <span class="built_in">max</span>(x, l - x));</span><br><span class="line">            ans2 = <span class="built_in">max</span>(ans2, <span class="built_in">min</span>(x, l - x));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, ans2, ans1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Lake-Counting"><a href="#Lake-Counting" class="headerlink" title="Lake Counting"></a><a href="http://poj.org/problem?id=2386">Lake Counting</a></h2><p>连通块个数判断<br>用<code>DFS</code>清除连通块，统计$DFS$的次数即为答案。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e2</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">10</span>] = &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">10</span>] = &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> n, m, ans;</span><br><span class="line"><span class="keyword">bool</span> arr[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inMap</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> &lt; x &amp;&amp; x &lt;= n &amp;&amp; <span class="number">0</span> &lt; y &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    arr[x][y] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> nx = x + dx[i];</span><br><span class="line">        <span class="keyword">int</span> ny = y + dy[i];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">inMap</span>(nx, ny) &amp;&amp; arr[nx][ny])</span><br><span class="line">            <span class="built_in">dfs</span>(nx, ny);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            cin &gt;&gt; ch;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">                arr[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">if</span> (arr[i][j])&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                <span class="built_in">dfs</span>(i, j);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="A-Knight’s-Journey"><a href="#A-Knight’s-Journey" class="headerlink" title="A Knight’s Journey"></a><a href="http://poj.org/problem?id=2488">A Knight’s Journey</a></h2><p><code>DFS</code>板子题<br>注意输出时要求按字典序最小方案输出，所以在设定方向时贪一下。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">20</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">10</span>] = &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">10</span>] = &#123;<span class="number">0</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> t, n, m, tot;</span><br><span class="line"><span class="keyword">bool</span> mk[maxn][maxn];</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; ans[maxn * maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inMap</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> &lt;= x &amp;&amp; x &lt;= n &amp;&amp; <span class="number">1</span> &lt;= y &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cnt, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (cnt == tot)&#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        ans[cnt] = <span class="built_in">make_pair</span>(x, y);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mk[x][y] = <span class="number">1</span>;</span><br><span class="line">    ans[cnt] = <span class="built_in">make_pair</span>(x, y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> nx = x + dx[i];</span><br><span class="line">        <span class="keyword">int</span> ny = y + dy[i];</span><br><span class="line">        <span class="keyword">if</span> (mk[nx][ny] || !<span class="built_in">inMap</span>(nx, ny))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(cnt + <span class="number">1</span>, nx, ny);</span><br><span class="line">        mk[nx][ny] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(mk, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mk));</span><br><span class="line">        tot = n * m;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Scenario #%d:\n&quot;</span>,i);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c%d&quot;</span>, <span class="string">&#x27;A&#x27;</span> - <span class="number">1</span> + ans[i].second, ans[i].first);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;impossible\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i != t)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">记录刷过的每一道题</summary>
    
    
    
    
    <category term="ACM-IPCP" scheme="http://remoder.github.io/tags/ACM-IPCP/"/>
    
  </entry>
  
  <entry>
    <title>博客诞生记</title>
    <link href="http://remoder.github.io/theBirthOfBlog.html"/>
    <id>http://remoder.github.io/theBirthOfBlog.html</id>
    <published>2021-06-24T15:07:53.000Z</published>
    <updated>2021-12-08T15:26:55.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="无中生有"><a href="#无中生有" class="headerlink" title="无中生有"></a>无中生有</h1><p>按着 <a href="https://adkcss.coding-pages.com/posts/6e8839eb.html#toc-heading-21">傻瓜式教程</a> 搭完了基础博客。</p><p>无脑按教程走，除了一点：Github 更新后 master 被改名为了 main，设置时要<strong>与时俱进</strong>。</p><p>另外，调整 <code>permalink</code> 的时候末尾要加上 <code>.html</code>，不然点击文章无法进入，而是下载。</p><h1 id="开始美化"><a href="#开始美化" class="headerlink" title="开始美化"></a>开始美化</h1><h3 id="挑选主题"><a href="#挑选主题" class="headerlink" title="挑选主题"></a>挑选主题</h3><p>经过长时间的对比，最终选择了 <a href="https://butterfly.js.org/">ButterFly</a>。</p><h3 id="完善主题"><a href="#完善主题" class="headerlink" title="完善主题"></a>完善主题</h3><ul><li>建立标签页</li><li>建立分类页</li><li>建立友链页<br>友链页代码段在教程中没有分段(似乎是我自己浏览器的问题)，现给出格式化后的代码：  </li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情鏈接</span></span><br><span class="line"><span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line"><span class="attr">link_list:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">    <span class="attr">descr:</span> <span class="string">快速、簡單且強大的網誌框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">網站</span></span><br><span class="line"><span class="attr">class_desc:</span> <span class="string">值得推薦的網站</span></span><br><span class="line"><span class="attr">link_list:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">    <span class="attr">descr:</span> <span class="string">視頻網站</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">    <span class="attr">descr:</span> <span class="string">中國最大社交分享平台</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">    <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br></pre></td></tr></table></figure><ul><li><p>创建导航菜单</p><p><strong>主题配置文件</strong> 是指 <code>\themes\butterfly\_config.yml</code></p></li><li><p>修改代码风格</p><p>最终选择了 <code>mac</code></p></li><li><p>修改文章自动节选</p><p>最终选择了 <code>both</code></p></li><li><p>背景图片</p><p>主页选择了 <a href="https://api.dujin.org/bing/1920.php">必应每日一图</a><br>其他页面选择了 <a href="https://api.ixiaowai.cn/gqapi/gqapi.php">随机壁纸</a></p></li><li><p>更换头像</p><blockquote><p>不要把个人需要的文件/图片放在主题 source 文件夹里，因为在升级主题的过程中，可能会把文件覆盖删除了。在 Hexo 根目录的 source 文件夹里，创建一个文件夹来放置个人文件/图片。引用文件直接为<code>/文件夹名称/文件名</code></p></blockquote></li><li><p>建立评论系统</p><p>最终选择了 <code>gitalk</code></p></li><li><p>开启背景彩带</p></li><li><p>开启打字副标题</p></li></ul><h3 id="升级主题"><a href="#升级主题" class="headerlink" title="升级主题"></a>升级主题</h3><p>在主题目录下 <code>git pull</code></p><h1 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h1><p>进入大学换了新电脑，需要将博客文件迁移。</p><p>按照 <a href="https://www.zhihu.com/question/21193762/answer/103097754">迁移教程</a> 进行设置，中间又出现了很多错误。</p><h3 id="git-bash-中无法使用-npm"><a href="#git-bash-中无法使用-npm" class="headerlink" title="git bash 中无法使用 npm"></a>git bash 中无法使用 npm</h3><ul><li>保证进入到博客目录</li><li>重开 <code>git bash</code></li></ul><h3 id="git-无法连接到-github"><a href="#git-无法连接到-github" class="headerlink" title="git 无法连接到 github"></a>git 无法连接到 github</h3><p>要重新申请 <code>SSH Key</code>，重新设置连接的 <code>github</code> 账户密码。</p><h3 id="hexo-s-后显示-cannot-get"><a href="#hexo-s-后显示-cannot-get" class="headerlink" title="hexo s 后显示 cannot get"></a>hexo s 后显示 cannot get</h3><p>在博客根目录下运行 <code>npm install</code></p><h3 id="npm-install-出错"><a href="#npm-install-出错" class="headerlink" title="npm install 出错"></a>npm install 出错</h3><ul><li>更新 <code>npm</code></li><li>重开 <code>git bash</code></li></ul><h2 id="细节问题"><a href="#细节问题" class="headerlink" title="细节问题"></a>细节问题</h2><h3 id="导航菜单子级页面"><a href="#导航菜单子级页面" class="headerlink" title="导航菜单子级页面"></a>导航菜单子级页面</h3><ul><li><strong>目的</strong>  </li></ul><p>鼠标放在“<strong>日常</strong>”，拉下清单，点击“<strong>练字</strong>”，进入<strong>练字分类页</strong>。</p><ul><li><strong>措施</strong></li></ul><p>文章中 <code>categories: 练字</code><br>导航栏主题设置中 <code> - 练字: /categories/练字/</code></p><h3 id="上传后图片不显示"><a href="#上传后图片不显示" class="headerlink" title="上传后图片不显示"></a>上传后图片不显示</h3><ul><li><strong>目的</strong></li></ul><p>引用本地图片，上传后图片依然显示。</p><ul><li><strong>措施</strong></li></ul><p><code>npm install https://github.com/EricGerry/hexo-asset-image-0.0.5.git --save</code> 安装插件用来上传本地图片。</p><p>此时 <code>post</code> 中应 <code>cover: /img/calligraphy.jpg</code>，注意是 <code>/</code>。</p>]]></content>
    
    
    <summary type="html">博客的搭建记录</summary>
    
    
    
    
    <category term="Hexo" scheme="http://remoder.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
